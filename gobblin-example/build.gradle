// Copyright (C) 2014-2016 LinkedIn Corp. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use
// this file except in compliance with the License. You may obtain a copy of the
// License at  http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed
// under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
// CONDITIONS OF ANY KIND, either express or implied.

apply plugin: 'java'

dependencies {    
  compile externalDependency.avro
  compile externalDependency.commonsLang3
  compile externalDependency.guava
  compile externalDependency.jacksonCore
  compile externalDependency.slf4j
  compile externalDependency.gson
  compile externalDependency.commonsVfs
  compile externalDependency.avroMapredH2
  compile externalDependency.lombok
  compile externalDependency.jodaTime
  compile externalDependency.httpcore
  compile externalDependency.httpclient
  compile project(":gobblin-api")
  compile project(":gobblin-core")
  compile project(":gobblin-metrics")
  compile project(":gobblin-utility")
  compile project(":gobblin-runtime")
  compile project(":gobblin-data-management")
  runtime project(":gobblin-kafka")
  compile externalDependency.avro
  compile externalDependency.guava
  compile externalDependency.jacksonCore
  compile externalDependency.slf4j
  compile externalDependency.gson
  compile externalDependency.commonsVfs  
  compile externalDependency.commonsLang
  compile externalDependency.commonsHttpClient
  compile externalDependency.commonsCodec
  compile externalDependency.parquetCommon
  compile externalDependency.parquetColumn
  compile externalDependency.parquetHadoop
  compile externalDependency.parquetAvro
  compile externalDependency.twitterBijectionCore
  compile externalDependency.twitterBijectionAvro
  compile externalDependency.jacksonCore
  compile externalDependency.jacksonMapper
  compile externalDependency.kafka
  compile externalDependency.kafkaClient
  compile externalDependency.scala
  compile externalDependency.avroMapredH2
  compile externalDependency.findBugsAnnotations
  testCompile externalDependency.testng
}

configurations {
  compile {
    transitive = false
  }
}

test {
  useTestNG ()
  include '**/*Test*'
}

ext.classification="library"
